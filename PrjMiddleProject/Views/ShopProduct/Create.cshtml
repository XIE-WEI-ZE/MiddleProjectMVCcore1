@model PrjMiddleProject.ViewModels.CShopProductWrap

@{
    ViewData["Title"] = "新增商品管理";
}
@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-lite.min.css" rel="stylesheet">
}

<div class="title-wrapper pt-30">
    <div class="title">
        <h1>新增商品管理</h1>
    </div>
</div>

<div class="card-style mb-30">
    <div>
        <div class="col-12">
            <form asp-action="Create" enctype="multipart/form-data" class="row">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="col-sm-12 col-lg-6 form-group">
                    <label asp-for="Product.ProductName" class="control-label"></label>
                    <input asp-for="Product.ProductName" class="form-control" />
                    <span asp-validation-for="Product.ProductName" class="text-danger"></span>
                </div>
                <div class="col-sm-12 col-lg-6 form-group mb-sm-3">
                    <label asp-for="Product.CategoryId" class="control-label">商品類別</label>
                    <select asp-for="Product.CategoryId" asp-items="ViewBag.Categories" class="form-select">
                        <option value="">-- 請選擇類別 --</option>
                    </select>
                </div>
                <div class="col-sm-12 col-lg-6 form-group">
                    <label asp-for="Product.OriginalPrice" class="control-label"></label>
                    <input asp-for="Product.OriginalPrice" class="form-control" min="0" />
                    <span asp-validation-for="Product.OriginalPrice" class="text-danger"></span>
                </div>
                <div class="col-sm-12 col-lg-6 form-group">
                    <label asp-for="Product.DiscountRate" class="control-label"></label>
                    <input asp-for="Product.DiscountRate" class="form-control" />
                    <span asp-validation-for="Product.DiscountRate" class="text-danger"></span>
                </div>
                <div class="col-sm-12 col-lg-6 form-group">
                    <label asp-for="Product.SalePrice" class="control-label"></label>
                    <input asp-for="Product.SalePrice" class="form-control" min="0" />
                    <span asp-validation-for="Product.SalePrice" class="text-danger"></span>
                </div>
                <div class="col-sm-12 col-lg-6 form-group">
                    <label asp-for="Product.Quantity" class="control-label"></label>
                    <input asp-for="Product.Quantity" class="form-control" min="0" />
                    <span asp-validation-for="Product.Quantity" class="text-danger"></span>
                </div>
                <div class="col-sm-12 col-lg-6 form-group">
                    <label asp-for="Product.Stock" class="control-label"></label>
                    <input asp-for="Product.Stock" class="form-control" min="0" />
                    <span asp-validation-for="Product.Stock" class="text-danger"></span>
                </div>
                <div class="col-sm-12 col-lg-6 form-group form-check d-flex align-items-center">
                    <label class="form-check-label ms-3 mb-3">
                        <input class="form-check-input" asp-for="Product.Discontinued" /> @Html.DisplayNameFor(model => model.Product.Discontinued)
                    </label>
                </div>
                <div class="col-sm-12 col-lg-6 form-group">
                    <label asp-for="Product.Summary" class="control-label"></label>
                    <input asp-for="Product.Summary" class="form-control" />
                    <span asp-validation-for="Product.Summary" class="text-danger"></span>
                </div>
                <div class="col-12 form-group">
                    <label asp-for="Product.Content" class="control-label"></label>
                    <textarea asp-for="Product.Content" class="form-control" id="Content"></textarea>
                    <span asp-validation-for="Product.Content" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label">上傳大圖（可多張）</label>
                    <input type="file" name="LargePhotos" id="LargePhotos" multiple class="form-control" />
                    <div id="previewLarge" class="mt-2 d-flex flex-wrap gap-2"></div>
                </div>
                <div class="mb-3">
                    <label class="form-label">上傳小圖（可多張）</label>
                    <input type="file" name="ThumbnailPhotos" id="ThumbnailPhotos" multiple class="form-control" />
                    <div id="previewThumb" class="mt-2 d-flex flex-wrap gap-2"></div>
                </div>
                <div class="form-group">
                    <input type="submit" value="儲存" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<div>
    <a asp-action="List" class="btn btn-secondary">返回列表</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        const maxSize = 5 * 1024 * 1024; // 5MB
        const allowedExtensions = [".jpg", ".jpeg", ".png", ".webp"];

        function validateFiles(inputId, previewId) {
            const input = document.getElementById(inputId);
            const preview = document.getElementById(previewId);
            const files = input.files;

            // 清空舊的預覽
            preview.innerHTML = "";

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const ext = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();

                // 副檔名格式檢查
                if (!allowedExtensions.includes(ext)) {
                    alert(`檔案 "${file.name}" 格式錯誤，僅允許 .jpg, .jpeg, .png, .webp`);
                    input.value = "";
                    preview.innerHTML = "";
                    return false;
                }

                // 檔案大小檢查
                if (file.size > maxSize) {
                    alert(`檔案 "${file.name}" 超過 5MB，請選擇小一點的檔案。`);
                    input.value = "";
                    preview.innerHTML = "";
                    return false;
                }

                // 加入縮圖預覽
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement("img");
                    img.src = e.target.result;
                    img.className = "img-thumbnail";
                    img.style.width = "120px";
                    img.style.height = "120px";
                    img.title = file.name;
                    preview.appendChild(img);
                };
                reader.readAsDataURL(file);
            }

            return true;
        }

        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("LargePhotos").addEventListener("change", () => validateFiles("LargePhotos", "previewLarge"));
            document.getElementById("ThumbnailPhotos").addEventListener("change", () => validateFiles("ThumbnailPhotos", "previewThumb"));
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-lite.min.js"></script>
    <script>
        function convertYoutubeLinksToIframe(html) {
            const youtubeRegex = /https:\/\/www\.youtube\.com\/watch\?v=([a-zA-Z0-9_-]+)/g;
            return html.replace(youtubeRegex, (match, videoId) => {
                return `<iframe width="560" height="315" src="https://www.youtube.com/embed/${videoId}" frameborder="0" allowfullscreen></iframe>`;
            });
        }

        $(document).ready(function () {
            $('#Content').summernote({
                height: 300,
                placeholder: '請輸入商品內容',
                codeviewFilter: false,
                codeviewIframeFilter: true,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'clear']],
                    ['fontname', ['fontname']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video']],
                    ['view', ['fullscreen', 'help']] // ⛔️ 不含 'codeview'
                ],
                callbacks: {
                    onImageUpload: function (files) {
                        const data = new FormData();
                        data.append('file', files[0]);
                        fetch('/api/summernote/upload', {
                            method: 'POST',
                            body: data
                        })
                        .then(res => res.json())
                        .then(result => {
                            $('#Content').summernote('insertImage', result.url);
                        });
                    }
                }
            });


            // 表單送出時，自動將 YouTube 連結轉成 iframe
            $('form').on('submit', function () {
                let html = $('#Content').summernote('code');
                html = convertYoutubeLinksToIframe(html);  // ✅ 替換成 iframe
                $('#Content').val(html); // 填回 hidden input
            });
        });
    </script>
}
